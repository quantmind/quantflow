Traceback (most recent call last):
  File "/home/runner/.cache/pypoetry/virtualenvs/quantflow-lUXkzsy2-py3.12/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/.cache/pypoetry/virtualenvs/quantflow-lUXkzsy2-py3.12/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.cache/pypoetry/virtualenvs/quantflow-lUXkzsy2-py3.12/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/quantflow-lUXkzsy2-py3.12/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/quantflow-lUXkzsy2-py3.12/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.cache/pypoetry/virtualenvs/quantflow-lUXkzsy2-py3.12/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.cache/pypoetry/virtualenvs/quantflow-lUXkzsy2-py3.12/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import plotly.express as px
import plotly.graph_objects as go
from quantflow.options.bs import black_call
N, M = 128, 10
dx = 10/N
r = m.call_option(64, M, dx, alpha=0.3)
b = black_call(r.x, p.sigma, ttm)
fig = px.line(x=r.x, y=r.y, markers=True, labels=dict(x="moneyness", y="call price"))
fig.add_trace(go.Scatter(x=r.x, y=b, name="analytical", line=dict()))
fig.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 6[39m
[32m      4[39m N, M = [32m128[39m, [32m10[39m
[32m      5[39m dx = [32m10[39m/N
[32m----> [39m[32m6[39m r = [43mm[49m[43m.[49m[43mcall_option[49m[43m([49m[32;43m64[39;49m[43m,[49m[43m [49m[43mM[49m[43m,[49m[43m [49m[43mdx[49m[43m,[49m[43m [49m[43malpha[49m[43m=[49m[32;43m0.3[39;49m[43m)[49m
[32m      7[39m b = black_call(r.x, p.sigma, ttm)
[32m      8[39m fig = px.line(x=r.x, y=r.y, markers=[38;5;28;01mTrue[39;00m, labels=[38;5;28mdict[39m(x=[33m"[39m[33mmoneyness[39m[33m"[39m, y=[33m"[39m[33mcall price[39m[33m"[39m))

[31mTypeError[39m: Marginal1D.call_option() takes from 1 to 2 positional arguments but 4 positional arguments (and 1 keyword-only argument) were given

